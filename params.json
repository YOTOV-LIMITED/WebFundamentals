{
  "name": "Webfundamentals",
  "tagline": "Best practices for modern web development",
  "body": "# Web Fundamentals <master> [![Build Status](https://ci.cloudware.io/api/badges/google/WebFundamentals/status.svg)](https://ci.cloudware.io/google/WebFundamentals)\r\n\r\n`master` staging: https://master-dot-web-central.appspot.com/web/\r\n<hr>\r\n\r\nWeb Fundamentals is a technical documentation center for multi-device web\r\ndevelopment.  Our goal is to build a resource for modern web developers\r\nthatâ€™s as curated and thorough as developer.android.com or iOS Dev Center.\r\n\r\n# Installing Dependencies\r\n\r\nTo build and run this project you need to have Ruby, Node and NPM.\r\n\r\n## Mac\r\n\r\n1. Install [XCode Command Line Tools](https://developer.apple.com/xcode/downloads/)\r\n1. Install node\r\n    * [https://nodejs.org/en/](https://nodejs.org/en/)\r\n1. Install [RVM](https://rvm.io/rubies/default)\r\n    * `curl -sSL https://get.rvm.io | bash`\r\n1. Set RVM Default to 2.2.0\r\n    * `rvm install ruby-2.2.0`\r\n    * `rvm --default use 2.2.0`\r\n1. Install [Pygments](http://pygments.org/)\r\n    * `easy_install pygments`\r\n1. Install bundler\r\n    * `gem install bundler`\r\n1. Install [RubyGems](https://rubygems.org/) dependencies ([Jekyll](http://jekyllrb.com/) and [Kramdown](http://kramdown.gettalong.org/))\r\n    * `rvm . do bundle install`\r\n1. Install the [Gulp CLI](http://gulpjs.com/)\r\n    * `npm install -g gulp`\r\n1. Install [npm](https://www.npmjs.org) dependencies\r\n    * `npm install`\r\n1. Get the [App Engine SDK](https://cloud.google.com/appengine/downloads) and unzip into the google_appengine folder inside the project root. Add it to your path accordingly (in bash, `$ PATH=./google_appengine:$PATH`)\r\n\r\n# Running the site\r\n\r\nTo run the site:\r\n\r\n    gulp\r\n\r\nThis will compile styles & javascript and build the site with Jekyll. If thats\r\nall working, it will start a server on port 7331 (which you can reach at\r\n[http://localhost:7331/web/](http://localhost:7331/web/)).\r\n\r\n\r\nAny changes to files will result in the appropriate tasks be running in gulp.\r\n\r\n## Faster Jekyll Builds\r\n\r\nTo make the build faster you can define a language and/or section of the site\r\nbe built.\r\n\r\nIf you want to build a single language then run this:\r\n\r\n    gulp --lang en\r\n\r\nIf you want to build a specific section then run this:\r\n\r\n    gulp --section shows\r\n\r\nThese can be combined like so:\r\n\r\n    gulp --lang en --section shows\r\n\r\n## Learning More About Jekyll and Liquid Used\r\n\r\nWe have a styleguide which you can access at [http://localhost:7331/web/styleguide/](http://localhost:7331/web/resources/styleguide/) that should get you up and running with a lot of the custom and useful info.\r\n\r\n\r\n# Translations\r\n\r\nSee [our translations guide](TRANSLATION.md)\r\n\r\n# Building Shows\r\n\r\nYou need the python [Google API client](https://developers.google.com/api-client-library/python/start/installation)\r\n\r\nFor Linux:\r\n\r\n    pip install --upgrade google-api-python-client\r\n\r\n# Content plan\r\n\r\nContent plan for Web Fundamentals is tracked through GitHub Issues and our [Site Structure + Content Inventory](http://goo.gl/nWDD0M) doc\r\n\r\n\r\n# Release status\r\n\r\nThe project was soft launched in late April with a formal v1 launch in June 2014.  We've now moved to a six-week rolling release cycle.\r\n\r\n# Project Structure\r\n\r\nThis is a Jekyll build.\r\n\r\n```\r\n/appengine-config - The server to host the static content\r\n/gulp-tasks - The tasks available to Gulp split by responsibility (styles, scripts etc.)\r\n/src - The documentation\r\n  /content - The content in each language\r\n    /en - The base language folder. Sub folders are sections of the site\r\n      /fundamentals\r\n      /showcase\r\n      /shows\r\n      ...etc...\r\n    /<langcode> - Overrides for that language, following the en structure.\r\n  /jekyll -\r\n    /_config - These are files which define specific settings for the setup of the page\r\n    /_data - These are static strings and their translations\r\n    /_includes - These a snippets of HTML you can include in a page\r\n    /_layouts - There are layouts you can reference in the YAML of your doc\r\n    /_plugins - This is the guts of Web Fundamentals.\r\n  /static\r\n    /imgs - Images used in Web Fundamentals\r\n    /scripts - Javascript - not used in final deployment of WF only local\r\n    /styles - Sass for web fundamentals\r\n    /third_party\r\n  /tests\r\n  /tools\r\n```\r\n\r\nThe site is generated in `/build`, which is never checked in.\r\n\r\n# Contributing\r\n\r\nWeb Fundamentals is an open source project and we welcome your contributions!\r\nBefore submitting a pull request, please review [CONTRIBUTING.md](CONTRIBUTING.md)\r\nand make sure that there is an issue filed describing the fix or new content.\r\nIf you don't complete these steps, we won't be able to accept your pull request, sorry.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}